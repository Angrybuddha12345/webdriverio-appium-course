version: 2.1

jobs:
  ios:
    macos: # indicate that we are using the macOS executor
      xcode: 14.3.1
    environment:
      IOS_VERSION: 16.4
      DEVICE_NAME: iPhone 14 Pro
    steps:
      - run:
          name: Install Rosetta 2
          command: |
            if /usr/sbin/softwareupdate --install-rosetta --agree-to-license; then
              echo "Rosetta installed successfully or already present"
            else
              echo "Rosetta installation failed"
              exit 1
            fi
      - checkout
      - run:
          name: Install nvm
          command: |
            # Install nvm (Node Version Manager)
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            # Ensure nvm is sourced in the current session
            source ~/.nvm/nvm.sh
      - run:
          name: Install Node.js v20.15.0 and npm
          command: |
            # Load nvm to make sure it's available
            source ~/.nvm/nvm.sh
            # Install Node.js v20.15.0 (npm will be installed automatically with Node.js)
            nvm install 20.15.0
            # Use Node.js v20.15.0 as the active version
            nvm use 20.15.0
            # Add npm binary to PATH explicitly
            export PATH="$HOME/.nvm/versions/node/v20.15.0/bin:$PATH"
            # Verify the installed Node.js and npm versions
            node -v
            npm -v
            npm install
            npm install -g appium
            appium -v
            appium -p 4723 &
            sleep 10
            npx wdio config/wdio.ios.conf.js
  android:
    macos: # indicate that we are using the macOS executor
      xcode: 14.3.1
    steps:
      - checkout
      - run:
          name: Install Java
          command: |
            brew tap homebrew/cask
            brew install openjdk@11
            sudo ln -sfn /usr/local/opt/openjdk@11/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdk
            echo 'export PATH="/usr/local/opt/openjdk@11/bin:$PATH"' >> ~/.bash_profile
            source ~/.bash_profile
      - run:
          name: Install Android SDK
          command: |
            brew install --cask android-sdk
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> ~/.bash_profile
            echo 'export PATH="$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH"' >> ~/.bash_profile
            echo 'export PATH="$ANDROID_HOME/emulator:$PATH"' >> ~/.bash_profile
            source ~/.bash_profile
      - run:
          name: Install Android SDK Components
          command: |
            yes | sdkmanager --licenses
            sdkmanager "platform-tools" "emulator" "platforms;android-30" "system-images;android-30;google_apis;x86_64"
      - run:
          name: Create Pixel 6 Emulator
          command: |
            echo "no" | avdmanager create avd -n pixel_6_android_11 -k "system-images;android-30;google_apis;x86_64" -d pixel_6
      - run:
          name: Start Emulator
          command: |
            nohup emulator -avd pixel_6_android_11 -no-snapshot -noaudio -no-boot-anim -gpu swiftshader_indirect > /dev/null 2>&1 &
            adb wait-for-device
      - run:
          name: Verify Emulator is Running
          command: |
            adb shell getprop sys.boot_completed | grep 1
      - run: |
          adb wait-for-device
          adb devices
          echo "Emulator started"
      - run: |
          npm install -g appium
          appium -v
          appium -p 4723 &
          sleep 10
          npx wdio config/wdio.android.conf.js

workflows:
  build_and_test:
    jobs:
      - android
